#!/bin/ksh -x
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source.  A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#

#
# Copyright 2013 Nexenta Systems, Inc.  All rights reserved.
#

# Load new SMB server binaries onto a test machine.

cpu=`uname -p`

# Where is destination?
if [ "$1" ] ; then
  DEST=$1
fi

# Where is PROTO? (arg? env? proto?)
if [ "$2" ] ; then
  PROTO=$2
elif [ "$ROOT" ] ; then
  PROTO=$ROOT
elif [ -d ./proto ] ; then
  PROTO=`pwd`/proto/root_$cpu
else
  echo "ROOT env?"
  exit 1
fi

case $cpu in
i386)
	ARCH64=amd64
	;;
sparc)
	ARCH64=sparcv9
	;;
*)  echo "Huh?" ; exit 1;;
esac

# Stop on error, and make noise
set -ex

# Stop the service
[ -z "$DEST" ] &&
  svcadm disable svc:/network/smb/server:default

# Unload old smbsrv (XXX: too bad, can't)
#modinfo |grep ' smbfs .SMBFS' |while read i junk
#do
#  modunload -i $i
#done

set +x

# Remove old binaries
while read f
do
  if [ -f $DEST/$f ] ; then
    echo "remove $DEST/$f"
    if [ -f $DEST/$f.orig ] ; then
      rm -f $DEST/$f
    else
      mv $DEST/$f $DEST/$f.orig
    fi
  fi
done <<EOF
kernel/drv/${ARCH64}/smbsrv
kernel/drv/smbsrv
kernel/kmdb/${ARCH64}/smbsrv
kernel/kmdb/smbsrv
EOF

# Copy in the new binaries
while read f
do
  cmp -s $PROTO/$f $DEST/$f || {
    echo "update $DEST/$f"
    if [ -f $PROTO/$f ] ; then
      if [ -f $DEST/$f.orig ] ; then
        rm -f $DEST/$f || :
      else
        mv $DEST/$f $DEST/$f.orig || :
      fi
    fi
    cp $PROTO/$f $DEST/$f
  }
done <<EOF
usr/kernel/drv/${ARCH64}/smbsrv
usr/kernel/drv/smbsrv
usr/kernel/kmdb/${ARCH64}/smbsrv
usr/kernel/kmdb/smbsrv
lib/svc/method/svc-smbd
lib/svc/manifest/network/smb/server.xml
usr/lib/devfsadm/linkmod/SUNW_misc_link.so
usr/lib/devfsadm/linkmod/SUNW_misc_link_i386.so
usr/lib/fs/smb/${ARCH64}/libshare_smb.so.1
usr/lib/fs/smb/libshare_smb.so.1
usr/lib/mdb/kvm/${ARCH64}/smbsrv.so
usr/lib/mdb/kvm/smbsrv.so
usr/lib/reparse/libreparse_smb.so.1
usr/lib/security/pam_smb_passwd.so.1
usr/lib/smbsrv/libmlrpc.so.1
usr/lib/smbsrv/libmlsvc.so.1
usr/lib/smbsrv/libsmb.so.1
usr/lib/smbsrv/libsmbns.so.1
usr/lib/smbsrv/libsqlite.so.1
usr/lib/smbsrv/smbd
usr/sbin/devfsadm
usr/sbin/smbadm
usr/sbin/smbstat
EOF

echo modload -p drv/smbsrv

# Note: postinstall does add_drv, etc.
# but we may need to run this (or reboot)
echo devfsadm -i smbsrv

# Reimport the manifest
echo svccfg import /lib/svc/manifest/network/smb/server.xml
echo svcadm restart manifest-import

# Refresh, Restart the service
if [ -z "$DEST" ]
then
  echo svcadm refresh svc:/network/smb/server:default
  echo svcadm enable  svc:/network/smb/server:default
fi
